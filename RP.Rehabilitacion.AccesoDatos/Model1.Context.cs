//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RP.Rehabilitacion.AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RPEntities2 : DbContext
    {
        public RPEntities2()
            : base("name=RPEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Alta> Alta { get; set; }
        public DbSet<Cita> Cita { get; set; }
        public DbSet<Cronograma_Profesional> Cronograma_Profesional { get; set; }
        public DbSet<Cronograma_ProfesionalDetalle> Cronograma_ProfesionalDetalle { get; set; }
        public DbSet<Diagnostico> Diagnostico { get; set; }
        public DbSet<Ficha_Evolucion> Ficha_Evolucion { get; set; }
        public DbSet<Paciente> Paciente { get; set; }
        public DbSet<Profesional> Profesional { get; set; }
        public DbSet<TipoDocumento> TipoDocumento { get; set; }
        public DbSet<TipoEspecialidad> TipoEspecialidad { get; set; }
    
        public virtual ObjectResult<spUPCtp2_DatosDiagnostico_Result> spUPCtp2_DatosDiagnostico(string dNIPaciente)
        {
            var dNIPacienteParameter = dNIPaciente != null ?
                new ObjectParameter("DNIPaciente", dNIPaciente) :
                new ObjectParameter("DNIPaciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUPCtp2_DatosDiagnostico_Result>("spUPCtp2_DatosDiagnostico", dNIPacienteParameter);
        }
    
        public virtual ObjectResult<string> spUPCtp2_HorasXFecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPCtp2_HorasXFecha", fechaParameter);
        }
    
        public virtual ObjectResult<spUPCtp2_TerapistaXFechaYHora_Result> spUPCtp2_TerapistaXFechaYHora(Nullable<System.DateTime> fecha, Nullable<int> tipoProfesional)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoProfesionalParameter = tipoProfesional.HasValue ?
                new ObjectParameter("TipoProfesional", tipoProfesional) :
                new ObjectParameter("TipoProfesional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUPCtp2_TerapistaXFechaYHora_Result>("spUPCtp2_TerapistaXFechaYHora", fechaParameter, tipoProfesionalParameter);
        }
    }
}
