//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RP.Rehabilitacion.AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RPRehabilitacionEntities : DbContext
    {
        public RPRehabilitacionEntities()
            : base("name=RPRehabilitacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alta> Altas { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<Cronograma_Profesional> Cronograma_Profesional { get; set; }
        public virtual DbSet<Cronograma_ProfesionalDetalle> Cronograma_ProfesionalDetalle { get; set; }
        public virtual DbSet<Diagnostico> Diagnosticoes { get; set; }
        public virtual DbSet<Ficha_Evolucion> Ficha_Evolucion { get; set; }
        public virtual DbSet<Paciente> Pacientes { get; set; }
        public virtual DbSet<Profesional> Profesionals { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumentoes { get; set; }
        public virtual DbSet<TipoEspecialidad> TipoEspecialidads { get; set; }
    
        public virtual int spUPCtp2_DatosDiagnostico(string dNIPaciente)
        {
            var dNIPacienteParameter = dNIPaciente != null ?
                new ObjectParameter("DNIPaciente", dNIPaciente) :
                new ObjectParameter("DNIPaciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUPCtp2_DatosDiagnostico", dNIPacienteParameter);
        }
    
        public virtual ObjectResult<string> spUPCtp2_HorasXFecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPCtp2_HorasXFecha", fechaParameter);
        }
    
        public virtual ObjectResult<spUPCtp2_TerapistaXFechaYHora_Result> spUPCtp2_TerapistaXFechaYHora(Nullable<System.DateTime> fecha, Nullable<int> tipoProfesional)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoProfesionalParameter = tipoProfesional.HasValue ?
                new ObjectParameter("TipoProfesional", tipoProfesional) :
                new ObjectParameter("TipoProfesional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUPCtp2_TerapistaXFechaYHora_Result>("spUPCtp2_TerapistaXFechaYHora", fechaParameter, tipoProfesionalParameter);
        }
    }
}
